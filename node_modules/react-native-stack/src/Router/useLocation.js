import { useContext } from 'react';
import invariant from 'tiny-invariant';
import { LocationContext } from './LocationContext';
import { RouterContext } from './RouterContext';
const initialLocation = {
    key: '',
    params: {},
    path: '',
    pathname: '',
    state: undefined
};
export function useLocation() {
    const router = useContext(RouterContext);
    const location = useContext(LocationContext);
    invariant(!!router, `You should not use useLocation outside a <RouterContext>`);
    invariant(!!location, `You should not use useLocation outside a <LocationContext>`);
    const setState = value => {
        if (router && location) {
            if (typeof value === 'function') {
                router.setLocationState(location.key, value(location.state));
            }
            else {
                router.setLocationState(location.key, value);
            }
        }
    };
    return [location || initialLocation, setState];
}
