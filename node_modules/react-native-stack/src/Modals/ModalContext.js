import React, { useEffect, useState } from 'react';
import { useApp } from '../App/useApp';
import { RouterEventType } from '../Router';
export const ModalContext = React.createContext(undefined);
export const ModalProvider = ({ location: l, children, match, route }) => {
    const app = useApp();
    const [location, setLocation] = useState(() => {
        const { Component, path, ...rest } = route;
        return {
            ...app.modals.entries.find(entry => entry.key === l.key),
            ...match,
            ...rest,
            remove: () => {
                app.removeModal(l.key);
            }
        };
    });
    useEffect(() => {
        return app.modals.addEventListener(RouterEventType.LocationStateChange, ({ key, state }) => {
            if (key === location.key) {
                const { Component, path, ...rest } = route;
                setLocation({
                    ...app.modals.entries.find(entry => entry.key === l.key),
                    ...match,
                    ...rest,
                    remove: () => {
                        app.removeModal(l.key);
                    },
                    state
                });
            }
        });
    }, []);
    return <ModalContext.Provider value={location} children={children}/>;
};
